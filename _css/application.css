@import url("utility/_normalise.css");
@import url("layout/_spacing.css");

/* Grid */
@import url("grid/_grid.css");

/* Typography */
@import url("typography/_links.css");
@import url("typography/_type.css");

/* Layout */
@import url("layout/_display.css");
@import url("layout/_images.css");
@import url("layout/_header.css");
@import url("layout/_nav.css");
@import url("layout/_article.css");
@import url("layout/_code.css");
@import url("layout/_hcard.css");
@import url("layout/_footer.css");
@import url("layout/_hire.css");



/* Dynamic Type, overwrite other values if on iOS */
@import url("typography/_dynamic-type.css");

/* Print */
@import url("_print.css");

.cinherit { color: inherit; }
.white { color: var(--white); }
.bc-black { background-color: var(--black); }

.ls-none { list-style: none; }

.ttu { text-transform: uppercase; }

/*
First test - remove print styles from inline and put them in a secondary styleheet.
    - Try with defer
    - Try with async
    - Try PUSH

Second test - remove all non essential styles from inline and bespoke each template.

Alternate approach.
- Break down code in to CMS CSS specific and everything else.
- Look for commonalities between approaches
- Can we move more to atomic CSS

- do we want an assets folder now?
*/
